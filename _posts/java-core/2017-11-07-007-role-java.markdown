---
layout: post
title: "Standarisasi penulisan coding di Java"
date: 2017-11-07T15:22:49+07:00
lang: java-core
authors:
- dimasm93
categories:
- Java
- Core
refs: []
youtube: 
comments: true
downloads: []
---

Mungkin dari sebagian dari temen-temen tanya kenapa sih di bahasa pemograman Java ada aturannya segala? gak seperti basaha pemograman yang lain `feel free`. Sebenanya klo temen-temen baca dokumentasi dari setiap bahasa pemograman yang temen-temen pelajari, semuanya punya aturan main (bagaimana coding seharunya ditulis, bagaimana best practicenya, dll). Nah di bahasa pemograman Java juga sama, ada aturan mainnya yang mengacu ke JSR (Java Spesification Request) di [link berikut](https://jcp.org/en/jsr/overview).

Nah langsung ada saya sebutin ya yang harus di perhatikan dalam penulisan koding di Java diatarnya sebagai berikut:

## Penulisan nama file dan `class`

1. Nama file harus sama dengan nama `class` contohnya klo saya punya file namanya `Halo.java` maka nama kelasnya adalah    
{% highlight java %}
public class Halo {}
{% endhighlight %}
2. Menggunakan sistem penulisan _case-sensitif_ artinya menbedakan antara huruf kecil dan huruf besar contohnya `halo` tidak sama dengan `HalO`
3. Menggunakan sistem _camel-case_ artinya Untuk huruf pertama dalam satu kalimat diawali dengan huruf besar sisanya kecil contohnya `Halo`, jika ada kalimat dan seterusnya maka hruf di awal kalimat huruf besar contohnya `SelamatDatang`, `BelajarJavaFundamental` dll.

## Penulisan nama `variable`

### Menggunakan Tipe Data

Penulisan nama variable biasanya diawali dengan tipe data contohnya `java.lang.Integer`, `java.lang.Double`, `java.util.Date` dll kemudian diikuti dengan nama variablenya contohnya

{% highlight java %}
java.lang.Integer bilanganBulat;
java.util.Date tanggalLahir;
java.sql.Timestamp createdDate;
java.math.BigDecimal saldo;
{% endhighlight %}

### Sistem Camel Case

Penulisan nama variable menggunakan sistem _camel-case_ sama seperti penulisan nama `class` **hanya perbedaanya adalah kalimat pertama menggunakan huruf kecil dan kalimat ke 2 dst menggunakan huruf besar** seperti yang dicontohkah diatas.

## Strong Data type

Java adalah bahasa yang memiliki fitur **strong data type** artinya menbedakan antara Number, String dan Date. Bahkan yang lebihnya lagi tipe data number dibagi-bagi lagi menjadi 2 jenis yaitu bulat (`short`, `int`, dan `long`) dan pecahan (`double`, dan `float`). Untuk lebih lanjutnya akan di bahas di materi tersendiri.

Nah itu mungkin sebagian yang perlu diperhatikan dari cara penulisan bahasa pemograman Java. dan mungkin dari temen-temen akan bertanya mengapa penaaman file harus besar dan variable harus kecil? ok, pertanyaan bagus. Jadi misalnya saya punya file dengan nama `Konstanta.java` dan memiliki variable seperti berikut:

{% highlight java linenos %}
public class Konstanta {
    public static final Integer sisiPersegi = 20;
    public static final Double phy = 20.0;
}
{% endhighlight %}

Nah sekarang misalnya kelas java tersebut dipanggil dari kelas lainnya contohnya saya punya file lagi dengan nama `MainApplication.java` seperti berikut:

{% highlight java linenos %}
public class MainApplication{
    
    public static void main(String[] x){
        // cara memanggil nilai dari kelas lain.
        System.out.println("Nilai PHY adalah "+ Konstanta.phy);
    }
}
{% endhighlight %}

Nah bagaimana terlihat lebih mudah di baca khan ya!. Ok supaya terlihat bedanya klo saya rename filenya seperti berikut dengan nama `konstanta.java` berarti nama kelasnya seperti berikut:

{% highlight java linenos %}
public class konstanta{
    public static final Integer sisipersegi = 20;
    public static final Double phy = 20.0;
}
{% endhighlight %}

Nah sekarang jadi seperti berikut cara aksesnya:

{% highlight java linenos %}
public class MainApplication{
    
    public static void main(String[] x){
        // cara memanggil nilai dari kelas lain.
        System.out.println("Nilai PHY adalah "+ konstanta.sisipersegi);
    }
}
{% endhighlight %}

Nah coba perhatikan `konstanta` dan `sisipersegi` itu tidak ada yang membedakan mana `variable` dan `class`. Ok nah jadi diharapkan dengan adanya artikel ini bisa lebih rapihlagi ya dalam penulisan _variable_ dan _class_. 



