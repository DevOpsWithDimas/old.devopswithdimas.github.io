---
layout: post
title: "Modularisasi menggunakan method atau function"
date: 2017-11-14T20:15:28+07:00
lang: java-core
authors:
- dimasm93
categories:
- Java
- Core
refs: []
youtube: https://www.youtube.com/watch?v=MXc5tbjgXUA&list=PLV1-tdmPblvz0NCFYgVQaQEOTWJCjjucO&index=23
comments: true
downloads: []
---

Function atau method, mungkin dari temen-temen masih aneh apa itu function atau method. Function atau method itu sebenarnya salah satu cara untuk mengelompokan suatu blok atau sekumpulan perintah dengan tujuan _reuseable_, _easy to debuging_, dan _readable_.

Jaman sekarang banyak programmer menggunakan method ini sebagai _service_ atau memecah bagian yang besar menjadi lebih kecil, mungkin dari temen-temen akan bertanya

> "Kang, memecah bagian menjadi lebih kecil itu gimana?

Jadi biasanya klo kita koding, khan ya udah maunya yang simple ja ya. semuanya ditulis dalam satu method contohnya:

{% highlight java %}
public class DepositoApplication{

    public void hitungBungaDeposito(){
        // hitung bunga harian yang klo dihitung secara baris misalkan 50baris

        // hitung bunga bulanan dari proses hitung bunga harian selanjutnya bunga bulanan

        // hitung pajak nasabah, dari hitung bunga bulanan pasti mengitung pajaknya

        // hitung armortisasi nasabah, dll

        // terus sampe bengek ditulis di method ini.
    }
}
{% endhighlight %}

Nah ini khan baru berupa deskripsi aja, kebayang gak klo misalnya pake koding beneran?

Jadi akan lebih baik jika kita pisahkan menggunakan method yang saling panggil-memanggil. Seperti berikut:

{% highlight java linenos %}
public class HitungDeposito{

    public static void hitungBungaHarian(){
        // hitung bunga harian untuk modul deposito
    }

    public static void hitungBungaBulanan(){
        // hitung bunga bulanan untuk modul deposito
    }

    public static void hitungAmortisasi(){
        // hitung amortisasi untuk nasabah tersebut
    }

    public static void hitungPajak(){
        // hitung pajak nasabah setelah bunga diterima
    }

    public static void main(String[] args){
        hitungBungaHarian();
        hitungBungaBulanan();
        hitungPajak();
        hitungAmortisasi();
    }
}
{% endhighlight %}

Ok perumpamaan tadi saya harap bisa dipahami ya. Baiklah jadi sekarang kita masuk kemateri tentang method atau function.

Funcation atau method di java pada dasarnya punya padanannya yaitu seperti berikut:

```java
public class DefMethod {

    // header declaration
    modifier return_type namaMethodOrFunction () {
        // statement here!
    }
}
```
## Aturan dalam membuat method

### Dalam _class_ 

Method harus berada **dalam _class_** tidak boleh berada diluar _class_. Seperti berikut:

{% highlight java linenos %}
public class MethodOutsideClass{
}
// public void method(){ } # this is not allowed
{% endhighlight %}

### Void or Return type

Setiap function pasti memiliki nilai kembalian baik yang tidak bernilai (void) atau pun memiliki nilai. Untuk function yang tidak memiliki nilai kita harus definisikan function tersebut dengan keyword `void` seperti berikut contohnya:

{% highlight java linenos %}
public class MethodVoid{

    public static void hitungBungaDeposito(){
        // here your statement
    }
}
{% endhighlight %}

Sedangkan untuk function yang memiliki nilai kembalian atau _Return type_ kita harus definisikan dengan tipe data yang mau kita kembalikan contohnya di method tersebut, saya mau mengeluarkan data yang bertipe `java.math.BigDecimal` maka kita harus definisinkan object tersebut kemudian untuk nilainya dibagian body method tersebut gunakan keyword `return` dengan disambung dengan _expresion_ kita. contohnya seperti berikut:

{% highlight java linenos %}
public class MethodReturnTypeBigDecimal {

    public static java.math.BigDecimal hitungBungaTabungan(){
        return new java.math.BigDecimal(1000000);
    }
}
{% endhighlight %}

### Penamaan method atau function

Penamaan method, sama seperti variable menggunakan sistem _camel-case_. Seperti berikut penamaan yang benar `hitungBungaDeposito`, `setValue`, `getValue`, `tentukanNilaiRupiah` dll.

### Call method in `main(String[])`

Untuk menanggil method didalam method `main(String[])`, untuk saat ini kita di method yang mau kita panggil harus menggunakan keyword `static` karena method `main(String[])` ini juga bernilai static, klo belum paham apa itu `static` nanti saya akan jelaskan di materi selanjutnya tpi make sure methodnya yang kita mau panggil bernilai `static` juga. Untuk memangil method dalam method `main(String[])` dalam satu _class_ yang sama kita bisa panggil methodnya seperti berikut:

{% highlight java linenos %}
public class MethodCallMethod {

    public static Integer umurSaya (){
        return 25;
    }

    public static String namaSaya (){
        return "Dimas Maryanto";
    }

    public static void sayHalo (){
        System.out.println(
            "Halo nama saya adalah "+ 
            namaSaya() + 
            ", saya berusia " + 
            umurSaya()+ 
            " salam kenal");
    }

    public static void main(String[] args){
        sayHalo();
    }

}
{% endhighlight %}

### Tidak boleh sama

Didalam sebuah _class_ **tidak boleh ada nama method yang sama** meskipun nanti akan ditemukan nama yang sama tetapi ada beberapa perbedaan di dalamnya.